version: "3.9"
services:
  nats:
    container_name: nats
    image: nats:latest
    ports:
      - 4222:4222
      - 8222:8222 
      - 6222:6222
    networks:
      - local
  elasticsearch:
      container_name: temporal-elasticsearch
      environment:
        - cluster.routing.allocation.disk.threshold_enabled=true
        - cluster.routing.allocation.disk.watermark.low=512mb
        - cluster.routing.allocation.disk.watermark.high=256mb
        - cluster.routing.allocation.disk.watermark.flood_stage=128mb
        - discovery.type=single-node
        - ES_JAVA_OPTS=-Xms100m -Xmx100m
      image: elasticsearch:7.10.1
      networks:
        - local
      ports:
        - 9200:9200
  postgresql:
    container_name: temporal-postgresql
    environment:
      POSTGRES_PASSWORD: temporal
      POSTGRES_USER: temporal
    image: postgres:9.6
    networks:
      - local
    ports:
      - 5432:5432
  temporal:
    container_name: temporal
    depends_on:
      - postgresql
      - elasticsearch
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=postgresql
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development_es.yaml
      - ENABLE_ES=true
      - ES_SEEDS=elasticsearch
      - ES_VERSION=v7
    image: temporalio/auto-setup:1.13.1
    networks:
      - local
    ports:
      - 7233:7233
    volumes:
      - ./dynamicconfig:/etc/temporal/config/dynamicconfig
  temporal-admin-tools:
    container_name: temporal-admin-tools
    depends_on:
      - temporal
    environment:
      - TEMPORAL_CLI_ADDRESS=temporal:7233
    image: temporalio/admin-tools:1.13.1
    networks:
      - local
    stdin_open: true
    tty: true
  temporal-web:
    container_name: temporal-web
    depends_on:
      - temporal
    environment:
      - TEMPORAL_GRPC_ENDPOINT=temporal:7233
      - TEMPORAL_PERMIT_WRITE_API=true
    image: temporalio/web:1.13.0
    networks:
      - local
    ports:
      - 8088:8088
networks:
  local:
    driver: bridge
    name: local
  # db:
  #   container_name: db
  #   image: postgres
  #   ports:
  #     - "5432:5432"
  #   environment:
  #     POSTGRES_PASSWORD: postgres
  #     POSTGRES_USER: postgres
  #   volumes:
  #     - ./db-data/:/var/lib/postgresql/data
  #   restart: unless-stopped
